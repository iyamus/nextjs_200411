{"ast":null,"code":"var _jsxFileName = \"/Users/iyamus/Documents/Dev/React/200411_nextjs/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport ProfileImage from '../components/ProfileImage';\nimport faker from 'faker';\nimport { decorate, observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nclass Data {\n  constructor() {\n    _defineProperty(this, \"avartar\", faker.image.avatar());\n\n    _defineProperty(this, \"email\", faker.internet.email());\n\n    _defineProperty(this, \"name\", {\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName()\n    });\n  }\n\n} // mobx 에서 observable처리 하겠다는 의미\n\n\ndecorate(Data, {\n  avartar: observable,\n  email: observable,\n  name: observable\n});\n\nclass index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"data\", new Data());\n\n    _defineProperty(this, \"generate\", () => {\n      this.data.email = faker.internet.email();\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Index\"), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: generate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Change\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, __jsx(\"dl\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, __jsx(\"dt\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Avatar\"), __jsx(\"dd\", {\n      className: \"col-sm-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: this.data.avartar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 50\n      }\n    })), __jsx(\"dt\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Name\"), __jsx(\"dd\", {\n      className: \"col-sm-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, this.data.firsName, \" \", this.data.lastName), __jsx(\"dt\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Email\"), __jsx(\"dd\", {\n      className: \"col-sm-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, this.data.email))));\n  }\n\n}\n\n; // observer 처리해주겠다는 의미\n\nindex = observer(index);\nexport default index;","map":{"version":3,"sources":["/Users/iyamus/Documents/Dev/React/200411_nextjs/pages/index.js"],"names":["Link","React","useState","ProfileImage","faker","decorate","observable","observer","Data","image","avatar","internet","email","firstName","name","lastName","avartar","index","Component","data","render","generate","firsName"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,IAAN,CAAW;AAAA;AAAA,qCACGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,EADH;;AAAA,mCAECN,KAAK,CAACO,QAAN,CAAeC,KAAf,EAFD;;AAAA,kCAGA;AACHC,MAAAA,SAAS,EAAET,KAAK,CAACU,IAAN,CAAWD,SAAX,EADR;AAEHE,MAAAA,QAAQ,EAAEX,KAAK,CAACU,IAAN,CAAWC,QAAX;AAFP,KAHA;AAAA;;AAAA,C,CASX;;;AACAV,QAAQ,CAACG,IAAD,EAAO;AACXQ,EAAAA,OAAO,EAAEV,UADE;AAEXM,EAAAA,KAAK,EAAEN,UAFI;AAGXQ,EAAAA,IAAI,EAAER;AAHK,CAAP,CAAR;;AAMA,MAAMW,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAAA;AAAA;;AAAA,kCACzB,IAAIV,IAAJ,EADyB;;AAAA,sCAGrB,MAAM;AACb,WAAKW,IAAL,CAAUP,KAAV,GAAkBR,KAAK,CAACO,QAAN,CAAeC,KAAf,EAAlB;AACH,KAL+B;AAAA;;AAOhCQ,EAAAA,MAAM,GAAG;AACL,WACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAK,MAAA,GAAG,EAAE,KAAKF,IAAL,CAAUH,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CAFJ,EAGI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKG,IAAL,CAAUG,QAApC,OAA+C,KAAKH,IAAL,CAAUJ,QAAzD,CAJJ,EAKI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKI,IAAL,CAAUP,KAApC,CANJ,CADJ,CAHJ,CADJ;AAeH;;AAvB+B;;AAwBnC,C,CAED;;AACAK,KAAK,GAAGV,QAAQ,CAACU,KAAD,CAAhB;AAEA,eAAeA,KAAf","sourcesContent":["import Link from 'next/link';\nimport React, { useState } from 'react';\nimport ProfileImage from '../components/ProfileImage';\nimport faker from 'faker';\nimport { decorate, observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nclass Data {\n    avartar = faker.image.avatar();\n    email = faker.internet.email();\n    name = {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n    };\n}\n\n// mobx 에서 observable처리 하겠다는 의미\ndecorate(Data, {\n    avartar: observable,\n    email: observable,\n    name: observable,\n})\n\nclass index extends React.Component {\n    data = new Data();\n\n    generate = () => {\n        this.data.email = faker.internet.email();\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Index</h1>\n                <button className=\"btn btn-primary\" onClick={generate}>Change</button>\n                <div>\n                    <dl className=\"row\">\n                        <dt className=\"col-sm-3\">Avatar</dt>\n                        <dd className=\"col-sm-9\"><img src={this.data.avartar} /></dd>\n                        <dt className=\"col-sm-3\">Name</dt>\n                        <dd className=\"col-sm-9\">{this.data.firsName} {this.data.lastName}</dd>\n                        <dt className=\"col-sm-3\">Email</dt>\n                        <dd className=\"col-sm-9\">{this.data.email}</dd>\n                    </dl>\n                </div>\n            </>);\n    }\n};\n\n// observer 처리해주겠다는 의미\nindex = observer(index);\n\nexport default index;"]},"metadata":{},"sourceType":"module"}