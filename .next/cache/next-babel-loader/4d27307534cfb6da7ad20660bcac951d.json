{"ast":null,"code":"var _jsxFileName = \"/Users/iyamus/Documents/Dev/React/200411_nextjs/pages/index.js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport ProfileImage from '../components/ProfileImage';\nimport faker from 'faker';\nexport default function index() {\n  const {\n    0: name,\n    1: setName\n  } = useState(faker.name.findName());\n  const {\n    0: avartar,\n    1: setAvatar\n  } = useState(faker.image.avatar());\n  const {\n    0: email,\n    1: setEmail\n  } = useState(faker.internet.email());\n\n  const generate = () => {\n    setName(faker.name.findName());\n    setAvatar(faker.image.avatar());\n    setEmail(faker.internet.email());\n  }; // callback ()함수는 순차적으로 실행되도록 한다. \n  // this.setState({}, () => { },()=> {});\n  // // useCallback(()=>) 복잡한 '함수'(첫번째 인자)를 기억 vs. useMemo\n  //   // 당첨숫자가 변경되어도 winNumbers가 기존값을 그대로 가지고 있음\n  //   // --> useCallback에서 winNumbers가 변경되면 실행되도록 [winNumbers]로 설정함\n  //   const onClickRedo = useCallback(() => {\n  //     console.log(\"onClickRedo\");\n  //     console.log(winNumbers);\n  //     setWinNumbers(getWinNumbers());\n  //     setWinBalls([]);\n  //     setBonus(null);\n  //     setRedo(false);\n  //     timeouts.current = [];\n  //   }, [winNumbers]);\n\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Index\"), __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: generate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Change\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"dl\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(\"dt\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Avatar\"), __jsx(\"dd\", {\n    className: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: avartar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }\n  })), __jsx(\"dt\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Name\"), __jsx(\"dd\", {\n    className: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, name), __jsx(\"dt\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(\"dd\", {\n    className: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, email))));\n}\n;","map":{"version":3,"sources":["/Users/iyamus/Documents/Dev/React/200411_nextjs/pages/index.js"],"names":["Link","React","useState","ProfileImage","faker","index","name","setName","findName","avartar","setAvatar","image","avatar","email","setEmail","internet","generate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAACE,KAAK,CAACE,IAAN,CAAWE,QAAX,EAAD,CAAhC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAuBR,QAAQ,CAACE,KAAK,CAACO,KAAN,CAAYC,MAAZ,EAAD,CAArC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAACE,KAAK,CAACW,QAAN,CAAeF,KAAf,EAAD,CAAlC;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACnBT,IAAAA,OAAO,CAACH,KAAK,CAACE,IAAN,CAAWE,QAAX,EAAD,CAAP;AACAE,IAAAA,SAAS,CAACN,KAAK,CAACO,KAAN,CAAYC,MAAZ,EAAD,CAAT;AACAE,IAAAA,QAAQ,CAACV,KAAK,CAACW,QAAN,CAAeF,KAAf,EAAD,CAAR;AACH,GAJD,CAL4B,CAU5B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEG,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAK,IAAA,GAAG,EAAEP,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,IAA1B,CAJJ,EAKI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,EAMI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BO,KAA1B,CANJ,CAFJ,CAHJ,CADJ;AAsBH;AAAA","sourcesContent":["import Link from 'next/link';\nimport React, { useState } from 'react';\nimport ProfileImage from '../components/ProfileImage';\nimport faker from 'faker';\n\nexport default function index() {\n    const [name, setName] = useState(faker.name.findName());\n    const [avartar, setAvatar] = useState(faker.image.avatar());\n    const [email, setEmail] = useState(faker.internet.email());\n\n    const generate = () => {\n        setName(faker.name.findName());\n        setAvatar(faker.image.avatar());\n        setEmail(faker.internet.email());\n    }\n    // callback ()함수는 순차적으로 실행되도록 한다. \n    // this.setState({}, () => { },()=> {});\n\n    // // useCallback(()=>) 복잡한 '함수'(첫번째 인자)를 기억 vs. useMemo\n    //   // 당첨숫자가 변경되어도 winNumbers가 기존값을 그대로 가지고 있음\n    //   // --> useCallback에서 winNumbers가 변경되면 실행되도록 [winNumbers]로 설정함\n    //   const onClickRedo = useCallback(() => {\n    //     console.log(\"onClickRedo\");\n    //     console.log(winNumbers);\n    //     setWinNumbers(getWinNumbers());\n    //     setWinBalls([]);\n    //     setBonus(null);\n    //     setRedo(false);\n    //     timeouts.current = [];\n    //   }, [winNumbers]);\n\n\n    return (\n        <>\n            <h1>Index</h1>\n            <button className=\"btn btn-primary\" onClick={generate}>Change</button>\n            <div>\n\n                <dl className=\"row\">\n                    <dt className=\"col-sm-3\">Avatar</dt>\n                    <dd className=\"col-sm-9\"><img src={avartar} /></dd>\n                    <dt className=\"col-sm-3\">Name</dt>\n                    <dd className=\"col-sm-9\">{name}</dd>\n                    <dt className=\"col-sm-3\">Email</dt>\n                    <dd className=\"col-sm-9\">{email}</dd>\n                </dl>\n\n                {/* <ProfileImage />\n                <ProfileImage size={100} />\n                <ProfileImage url={'https://placeimg.com/400/400/animals'} />\n                <ProfileImage size={300} />\n                <ProfileImage url={'https://placeimg.com/400/400/woman'} /> */}\n            </div>\n        </>);\n};"]},"metadata":{},"sourceType":"module"}